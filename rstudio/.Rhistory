library(foreach)
library(iterators)
library(parallel)
library(doParallel)
library(plyr)
library(dplyr)
library(tidyr)
library(Matrix)
library(lubridate)
library(ggplot2)
library(viridis)
library(broom)
library(xgboost)
library(randomForest)
library(caret)
library(caretEnsemble)
registerDoParallel(6, cores = 6)
getDoParWorkers()
setwd('/Users/Dino/Projects/nba-stats/rstudio')
raw.df <- read.csv(file.path('data', 'sc.csv'))
prep.df <- raw.df %>%
mutate(GRID_TYPE = NULL, PLAYER_ID = NULL, PLAYER_NAME = NULL,
SHOT_ATTEMPTED_FLAG = NULL, TEAM_ID = NULL, TEAM_NAME = NULL)
plot.df <- prep.df %>%
select(LOC_X, LOC_Y, EVENT_TYPE)
p <- ggplot(data = plot.df, mapping = aes(
x = LOC_X, y = LOC_Y, group = EVENT_TYPE))
p <- p + geom_point(size = 4, alpha = .55, aes(colour = EVENT_TYPE)) +
scale_color_viridis(discrete = TRUE)
p
glm.df <- plot.df %>%
mutate(MADE = as.numeric(EVENT_TYPE)) %>%
mutate(EVENT_TYPE = NULL) %>%
mutate(MADE = (MADE - 2) * (-1))
glm1 <- glm(MADE ~ LOC_X + LOC_Y,
family = binomial(), data = glm.df)
View(prep.df)
r.df <- prep.df %>%
select(SHOT_DISTANCE, EVENT_TYPE)
rg.df <- plot.df %>%
mutate(MADE = as.numeric(EVENT_TYPE)) %>%
mutate(EVENT_TYPE = NULL) %>%
mutate(MADE = (MADE - 2) * (-1))
p <- ggplot(data = plot.df, mapping = aes(
x = LOC_X, y = LOC_Y, group = EVENT_TYPE))
p <- p + geom_point(size = 2, alpha = .55, aes(colour = EVENT_TYPE)) +
scale_color_viridis(discrete = TRUE)
p
glm2 <- glm(MADE ~ SHOT_DISTANCE,
family = binomial(), data = rg.df)
View(rg.df)
rg.df <- r.df %>%
mutate(MADE = as.numeric(EVENT_TYPE)) %>%
mutate(EVENT_TYPE = NULL) %>%
mutate(MADE = (MADE - 2) * (-1))
glm2 <- glm(MADE ~ SHOT_DISTANCE,
family = binomial(), data = rg.df)
glm2
summarise(rg.df)
View(rg.df)
View(rg.df$SHOT_DISTANCE)
summarise(rg.df$SHOT_DISTANCE)
summarise(rg.df, count(SHOT_DISTANCE))
summarise(rg.df, tally(SHOT_DISTANCE))
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% tally()
View(rgc)
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% mean(MADE)
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% mean.default(MADE)
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% mean.default(as.numeric(MADE))
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% mean()
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% summarise(m = mean(MADE))
View(rgc)
rgc <- rg.df %>% group_by(SHOT_DISTANCE) %>% summarise(m = mean(MADE), n = n())
View(rgc)
glm2.pred <- predict(glm2, rg.df$SHOT_DISTANCE, type = 'response')
glm2.pred <- predict(glm2, type = 'response')
View(glm2.pred)
as.numeric(glm2.pred)
glm2.pred
glm2.pred <- as.numeric(glm2.pred)
library(tibble)
res.df <- data_frame(distance = rg.df$SHOT_DISTANCE, made = rg.df$MADE, pred = glm2.pred)
View(res.df)
res.df$val <- res.df$made * 2.0 + (1.0 (res.df$distance >= 24))
res.df <- res.df %>% mutate(act_val = made * ifelse(distance >= 24, 3, 2))
res.df <- res.df %>% mutate(exp_val = pred * ifelse(distance >= 24, 3, 2))
sum(res.df$act_val)
sum(res.df$exp_val)
gr.df <- res.df %>% group_by(distance) %>% summarise(ME = mean(exp_val))
View(gr.df)
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_line()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity')
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity') + scale_color_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity') + scale_fill_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity') + scale_fill_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_color_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_fill_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_fill_viridis() + scale_color_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_fill_hue()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_color_hue()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(colour = ME)) + scale_fill_viridis()
gp
gp <- ggplot(gr.df, mapping = aes(distance, ME)) + geom_bar(stat = 'identity', aes(fill = ME)) + scale_fill_viridis()
gp
library(tibble)
library(dplyr)
raw.df <- data_frame(q = c(1, 5, 20, 100, 500, 4000), ea = c(20, 19, 16, 9, 7, 5)) %>% mutate(tot = q * ea)
View(raw.df)
a.tot <- approx(raw.df$q, raw.df$tot, n=4000)
library(ggplot2)
autoplot(a.tot)
autoplot(a.tot$y)
ggplot(a.tot, aes(x, y)) + geom_line()
a.tot <- a.tot %>% as_data_frame()
ggplot(a.tot, aes(x, y)) + geom_line()
View(a.tot)
a.ea <- a.tot %>% mutate(y = y/x)
View(a.ea)
ggplot(a.ea, aes(x, y)) + geom_line()
n.tot <- approx(raw.df$q, raw.df$ea, n=4000)
plot(n.tot)
n.ea <- approx(raw.df$q, raw.df$ea, n=4000)
n.ea <- n.ea %>> as_data_frame()
n.ea <- n.ea %>% as_data_frame()
View(n.ea)
ggplot(a.ea, aes(x, y)) + geom_line()
View(n.ea)
ggplot(n.ea, aes(x, y)) + geom_line()
ggplot(n.tot, aes(x, y)) + geom_line()
n.ea <- n.ea %>% mutate(tot = x*y)
View(n.ea)
View(a.tot)
View(a.tot)
ggplot(n.tot, aes(x, tot)) + geom_line()
ggplot(n.ea, aes(x, tot)) + geom_line()
ggplot(n.ea, aes(x, y)) + geom_line()
ggplot(n.ea, aes(x, tot)) + geom_line()
rm(a.ea, a.tot, n.ea, n.tot)
a.df <- approx(q, ea, n = 4000)
a.df <- approx(raw.df$q, raw.df$ea, n = 4000)
a.df <- a.df %>% as_data_frame
View(a.df)
a.df <- a.df %>% mutate(tot = x*y)
a.df <- a.df %>% mutate(d = diff(tot))
a.df <- a.df %>% mutate(d = c(0, diff(tot)))
plot(a.df$d)
a.df <- a.df %>% mutate(de = c(0, diff(y)))
plot(a.df$de)
a.df <- a.df %>% mutate(dd = c(0, diff(d)))
plot(a.df$dd)
